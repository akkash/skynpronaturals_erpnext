[
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Sales Invoice", 
  "modified": "2016-12-01 15:12:16.041897", 
  "name": "Sales Invoice-Client", 
  "script": "frappe.ui.form.on(\"Sales Invoice Item\", \"item_code\", function(frm, cdt, cdn) {\n\tvar d = locals[cdt][cdn];\n\td[\"warehouse\"] = cur_frm.doc.spn_warehouse;\n});\n\nfrappe.ui.form.on(\"Sales Invoice\", \"spn_warehouse\", function(frm) {\n    if(frm.doc.spn_warehouse && frm.doc.territory && frm.doc.customer_group) {\n        items = frm.doc.items;\n        for (var i=0; i <= items.length - 1; i++) {\n            items[i].warehouse = cur_frm.doc.spn_warehouse;\n        }\n        \n        //Fetch and set letterhead\n        frappe.call({\n            method: \"skynpronaturals_erpnext.api.get_spn_letter_head\",\n            args: {spn_warehouse: frm.doc.spn_warehouse }, \n            callback: function(r) {\n                if (!r.exc) {\n                    cur_frm.set_value(\"letter_head\", r.message);\n                } else {\n                    frappe.msgprint(\"Check letterhead field in selected Warehouse.\")\n                }\n            }\n        });\n        \n            frappe.call({\n                method: \"skynpronaturals_erpnext.api.get_naming_series\",\n                args: { \n                 \"spn_warehouse\": frm.doc.spn_warehouse,\n                 \"cust_ter\": frm.doc.territory,\n                 \"cust_group\": frm.doc.customer_group\n                },\n                callback: function(r){\n                    //frappe.msgprint(r);\n                    cur_frm.set_value(\"naming_series\", r.message);\n                }\n            });\n        \n        //Fetch terms by territory and set.\n        frappe.call({\n            method: \"skynpronaturals_erpnext.api.get_terms_by_warehouse_state\",\n            args: { \n             \"spn_warehouse\": frm.doc.spn_warehouse\n            },\n            callback: function(r){\n            \n                cur_frm.set_value(\"tc_name\", r.message);\n            }\n        });\n    }\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Purchase Receipt", 
  "modified": "2016-12-01 16:49:38.375732", 
  "name": "Purchase Receipt-Client", 
  "script": "frappe.ui.form.on(\"Purchase Receipt\", \"spn_warehouse\", function(frm) {\n    if(frm.doc.spn_warehouse) {\n        items = frm.doc.items;\n        for (var i=0; i <= items.length - 1; i++) {\n            items[i].warehouse = cur_frm.doc.spn_warehouse;\n        }\n        \n        //Fetch and set letterhead\n        frappe.call({\n            method: \"skynpronaturals_erpnext.api.get_spn_letter_head\",\n            args: {spn_warehouse: frm.doc.spn_warehouse }, \n            callback: function(r) {\n                if (!r.exc) {\n                    cur_frm.set_value(\"letter_head\", r.message);\n                } else {\n                    frappe.msgprint(\"Check letterhead field in selected Warehouse.\")\n                }\n            }\n        });\n       }\n});", 
  "script_type": "Client"
 }, 
 {
  "docstatus": 0, 
  "doctype": "Custom Script", 
  "dt": "Stock Entry", 
  "modified": "2016-12-23 10:57:47.065157", 
  "name": "Stock Entry-Client", 
  "script": "frappe.ui.form.on(\"Stock Entry\", \"onload\", function(frm) {\n\tfrm.set_df_property(\"spn_to_warehouse\", \"hidden\", 1);\n});\n\nfrappe.ui.form.on(\"Stock Entry\", \"refresh\", function(frm) {\n\tvar condition = (((frm.doc.docstatus == 0)  || frm.doc.__islocal));\n\n\tif (condition) {\n\t\tfrm.add_custom_button(__(\"Set Details from Transit Entry\"), function() {\n\t\t\tfrappe.prompt([\n\t\t\t\t{'fieldname': 'stock_entry', 'fieldtype': 'Link', 'options':'Stock Entry','label':'Stock Entry' }\n\t\t\t],\n\t\t\tfunction(value){\n\t\t\t\tconsole.log(value);\n\t\t\t\tset_details_from_transit_entry(frm, value[\"stock_entry\"]);\n\t\t\t},\n\t\t\t'Select Transit Entry',\n\t\t\t'Select'\n\t\t\t)\n\t\t});\n\t}\n});\n\nfrappe.ui.form.on(\"Stock Entry\", \"spn_to_warehouse\", function(frm) {\n\tif(frm.doc.spn_to_warehouse) {\n\t\titems = frm.doc.items;\n\t\tfor (var i=0; i <= items.length - 1; i++) {\n\t\t\titems[i].spn_t_warehouse = cur_frm.doc.spn_to_warehouse;\n\t\t}\n\t}\n});\n\nfrappe.ui.form.on(\"Stock Entry\", \"from_warehouse\", function(frm) {\n\tif(frm.doc.from_warehouse) {\n\t\tfrappe.call({\n\t\t\tmethod: \"skynpronaturals_erpnext.api.get_spn_letter_head\",\n\t\t\targs: {spn_warehouse: cur_frm.doc.from_warehouse }, \n\t\t\tcallback: function(r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tcur_frm.set_value(\"letter_head\", r.message);\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(\"Check letterhead field in selected Warehouse.\")\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nfrappe.ui.form.on(\"Stock Entry\", \"purpose\", function(frm) {\n\tset_destination_warehouse(frm);\n\tif (cur_frm.doc.purpose == \"Material Transfer\") {\n\t\tcur_frm.set_value(\"spn_stock_entry_type\", \"Skynpro\");\n\t} else {\n\t\tcur_frm.set_value(\"spn_stock_entry_type\", \"Default\");\n\t}\n});\n\nfrappe.ui.form.on(\"Stock Entry\", \"spn_stock_entry_type\", function(frm) {\n\tset_destination_warehouse(frm);\n});\n\nfrappe.ui.form.on(\"Stock Entry Detail\", \"qty\", function(frm, cdt, cdn) {\n\tvar d = locals[cdt][cdn];\n\tfrappe.db.get_value(\"Stock Entry Detail\", \n\t\tfilters={\"parent\": cur_frm.doc.spn_linked_transit_entry, \"item_code\": d[\"item_code\"]}, \n\t\tfieldname=\"qty\",\n\t\tfunction(r) {\n\t\t\td[\"spn_qty_lost\"] = r.qty - d[\"qty\"];\n\t\t\trefresh_field(\"items\");\n\t\t});\n});\n\n//Helpers\nfunction set_destination_warehouse(frm){\n\tif (frm.doc.purpose == \"Material Transfer\") {\n\t\tif (frm.doc.spn_stock_entry_type == \"Skynpro\") {\n\t\t\tfrm.set_df_property(\"spn_to_warehouse\", \"hidden\", 0);\n\t\t\tfrappe.model.get_value(\"SPN Settings\", \"SPN Settings\", \"spn_transit_warehouse\", function(r){\t\t\t\t\t     \n\t\t\t\tcur_frm.set_value(\"to_warehouse\", r.spn_transit_warehouse);\n\t\t\t});\n\t\t} else {\n\t\t\tfrm.set_df_property(\"spn_to_warehouse\", \"hidden\", 1);\n\t\t\tcur_frm.set_value(\"to_warehouse\", \"\");\n\t\t}\n\t} else {\n\t\tfrm.set_df_property(\"spn_to_warehouse\", \"hidden\", 1);\n\t\tcur_frm.set_value(\"to_warehouse\", \"\");\n\t}\n}\n\n//Details from transit entry\nfunction set_details_from_transit_entry(frm, transit_entry_name) {\n\titems = [];\n\tfrappe.call({\n\t\tmethod: \"skynpronaturals_erpnext.api.get_details_from_transit_entry\",\n\t\targs: { \n\t\t\t\"transit_entry_name\" : transit_entry_name \n\t\t},\n\t\tcallback: function(r) {\n\t\t\t//Set Type\n\t\t\t//cur_frm.set_value(\"purpose\", \"Material Transfer\");\n\t\t\tcur_frm.set_value(\"spn_stock_entry_type\", \"Default\");\n\n\t\t\t//Set Items\n\t\t\tcur_frm.set_value(\"items\", []); //Clear existing items first (blank row/items from prev fetch).\n\t\t\tfor (i=0;i<=r.message.items.length-1; i++) {\n\t\t\t\trow = frappe.model.add_child(cur_frm.doc, \"Stock Entry Detail\", \"items\");\n\t\t\t\trow.item_code = r.message.items[i].item_code;\n\t\t\t\trow.item_name = r.message.items[i].item_name;\n\t\t\t\trow.qty = r.message.items[i].qty;\n\t\t\t\trow.transfer_qty = r.message.items[i].transfer_qty;\n\t\t\t\trow.uom = r.message.items[i].uom;\n\t\t\t\trow.basic_rate = r.message.items[i].basic_rate;\n\t\t\t\trow.basic_amount = r.message.items[i].basic_amount;\n\t\t\t\trow.additional_cost = r.message.items[i].additional_cost;\n\t\t\t\trow.valuation_rate = r.message.items[i].valuation_rate;\n\t\t\t\trow.amount = r.message.items[i].amount;\n\t\t\t\trow.conversion_factor = r.message.items[i].conversion_factor;\n\t\t\t\trow.expense_account = r.message.items[i].expense_account;\n\t\t\t\trow.cost_center = r.message.items[i].cost_center;\n\t\t\t\trefresh_field(\"items\");\n\t\t\t}\n\n\t\t\t//Set Default warehouses here. Cause cascade in items.\n\t\t\tfrappe.model.get_value(\"SPN Settings\", \"SPN Settings\", \"spn_transit_warehouse\", function(rval){\t\t\t\t\t     \n\t\t\t\tcur_frm.set_value(\"from_warehouse\", rval.spn_transit_warehouse);\n\t\t\t});\n\t\t\t\n\t\t\tcur_frm.set_value(\"to_warehouse\", r.message.destination_warehouse);\n\t\t\t\n\t\t\t//Link selected SE to current SE.\n\t\t\tcur_frm.set_value(\"spn_linked_transit_entry\", transit_entry_name);\n\n\t\t\trefresh_field(\"items\");\n\t\t}\n\t});\n}\n\nfunction create_transit_loss_stock_entry_on_submit(frm) {\n\tvar items_with_transit_loss = frm.doc.items.filter(function(i) { i.spn_loss_qty > 0.0 });\n\tif (items_with_transit_loss.length > 0) {\n\t\t//Create transit entry with stock loss\n\t\tfrappe.call({\n\t\t\tmethod: \"refreshednow_erpnext.api.create_transit_loss_stock_entry\",\n\t\t\targs: { \"created_against\" : frm.doc.name },\n\t\t\tcallback: function(r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tshow_alert(\"Transit loss entry created (\" + r.message + \")\");\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n}\n", 
  "script_type": "Client"
 }
]